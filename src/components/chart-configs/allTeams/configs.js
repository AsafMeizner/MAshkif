import {teleopTeamAverages, teleopTeamMax, matchTeamAverages, matchTeamMax, autonomousMovedTeamAverages, 
    autonomousSpeakerTeamAverages, autonomousSpeakerTeamMax, autonomousFoulTeamAverages, autonomousFoulTeamMax, 
    autonomousSpeakerAccuracyTeam, teleopSpeakerTeamAverage, teleopSpeakerTeamMax, teleopAmpTeamAverage,
    teleopAmpTeamMax, teleopAmpAccuracyTeam, teleopSpeakerAccuracyTeam, endgameClimbData, endgameTrapTeamAverage,
    ampTeleOpAccuracyAverage, ampTeleOpAccuracyMax, ampTeleOpAverage, ampTeleOpMax, speakerTeleOpAccuracyAverage,
    speakerTeleOpAccuracyMax, speakerTeleOpAverage, speakerTeleOpMax } from './functions.js';

export const averageTeleopScoreConfig= (scoutingData) => ({
    data: teleopTeamAverages(scoutingData),
    title: 'Tele-Op Average Notes By Team',
    scoringTypes: [
        {
            key: 'averageScore',
            label: 'Average Score',
            color: '#70dbed',
            name: 'Tele-Op Average Cycles',
        },
    ],
    chartSettings: {
        showGridlines: true,
        gridlineColor: '#444444',
    },
    xKey: 'teamNumber',
    yKey: 'averageScore',
    xAxisLabel: 'Team Number',
    yAxisLabel: 'Average Score',
    yAxisMin: 0,
    yAxisMax: 'auto',
    showTooltip: true,
    tooltipSettings: {
        backgroundColor: '#333333',
        borderRadius: '8px',
        fontSize: '0.875rem',
        cursorColor: 'rgba(255, 255, 255, 0.1)',
    },
    showLegend: true,
    interactiveLegend: true,
    legendPosition: 'top',
    responsive: true,
    maintainAspectRatio: true,
    showDataLabels: false,
    dataLabelPosition: 'inside',
    dataLabelRotation: 0,
});

export const maxTeleopScoreConfig= (scoutingData) => ({
data: teleopTeamMax(scoutingData),
title: 'Tele-Op Max Notes By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#f2495c',
        name: 'Tele-Op Max Cycles',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageMatchScoreConfig= (scoutingData) => ({
data: matchTeamAverages(scoutingData),
title: 'Match Average Notes By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#3498db',
        name: 'Match Average Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const maxMatchScoreConfig= (scoutingData) => ({
data: matchTeamMax(scoutingData),
title: 'Match Max Notes By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#e74c3c',
        name: 'Match Max Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageAutonomousScoreConfig= (scoutingData) => ({
data: autonomousSpeakerTeamAverages(scoutingData),
title: 'Autonomous Average Notes By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#8ab8ff',
        name: 'Autonomous Average Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const maxAutonomousScoreConfig= (scoutingData) => ({
data: autonomousSpeakerTeamMax(scoutingData),
title: 'Autonomous Max Notes By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#fa6400',
        name: 'Autonomous Max Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageAutonomousMovedConfig= (scoutingData) => ({
data: autonomousMovedTeamAverages(scoutingData),
title: 'Autonomous Moved Average Notes By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#fade2a',
        name: 'Autonomous Moved Average Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageAutonomousFoulConfig= (scoutingData) => ({
data: autonomousFoulTeamAverages(scoutingData),
title: 'Autonomous Foul Average By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#ff0000',
        name: 'Autonomous Foul Average Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const maxAutonomousFoulConfig= (scoutingData) => ({
data: autonomousFoulTeamMax(scoutingData),
title: 'Autonomous Foul Max By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#ff0000',
        name: 'Autonomous Foul Max Score',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageAutonomousSpeakerAccuracyConfig= (scoutingData) => ({
data: autonomousSpeakerAccuracyTeam(scoutingData),
title: 'Autonomous Speaker Accuracy Average Notes By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#ff0000',
        name: 'Autonomous Speaker Percent in',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageTeleopSpeakerByTeamConfig= (scoutingData) => ({
data: teleopSpeakerTeamAverage(scoutingData),
title: 'Teleop Speaker Average By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#b877d9',
        name: 'Teleop Speaker Average',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const maxTeleopSpeakerByTeamConfig= (scoutingData) => ({
data: teleopSpeakerTeamMax(scoutingData),
title: 'Teleop Speaker Max By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#f9934e',
        name: 'Teleop Speaker Max',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageTeleopAmpByTeamConfig= (scoutingData) => ({
data: teleopAmpTeamAverage(scoutingData),
title: 'Teleop Amp Average By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#fa6400',
        name: 'Teleop Amp Average',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const maxTeleopAmpByTeamConfig= (scoutingData) => ({
data: teleopAmpTeamMax(scoutingData),
title: 'Teleop Amp Max By Team',
scoringTypes: [
    {
        key: 'maxScore',
        label: 'Max Score',
        color: '#8ab8ff',
        name: 'Teleop Amp Max',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'maxScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Max Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const teleopSpeakerPercentInByTeamConfig= (scoutingData) => ({
data: teleopSpeakerAccuracyTeam(scoutingData),
title: 'Teleop Speaker Percent In By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#65fe65',
        name: 'Teleop Speaker Percent In',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const teleopAmpPercentInByTeamConfig= (scoutingData) => ({
data: teleopAmpAccuracyTeam(scoutingData),
title: 'Teleop Amp Percent In By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#97fa97',
        name: 'Teleop Amp Percent In',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'averageScore',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 'auto',
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const averageEndgameTrapByTeamConfig= (scoutingData) => ({
data: endgameTrapTeamAverage(scoutingData),
title: 'Endgame Trap Average By Team',
scoringTypes: [
    {
        key: 'averageScore',
        label: 'Average Score',
        color: '#f2495c',
        name: 'Trap Average',
    },
],
chartSettings: {
    showGridlines: true,
    gridlineColor: '#444444',
},
xKey: 'teamNumber',
yKey: 'Average Score',
xAxisLabel: 'Team Number',
yAxisLabel: 'Average Score',
yAxisMin: 0,
yAxisMax: 1,
showTooltip: true,
tooltipSettings: {
    backgroundColor: '#333333',
    borderRadius: '8px',
    fontSize: '0.875rem',
    cursorColor: 'rgba(255, 255, 255, 0.1)',
},
showLegend: true,
interactiveLegend: true,
legendPosition: 'top',
responsive: true,
maintainAspectRatio: true,
showDataLabels: false,
dataLabelPosition: 'inside',
dataLabelRotation: 0,
});

export const endgameClimbPercentByTeamConfig= (scoutingData) => ({
    data: endgameClimbData(scoutingData),
    title: 'Endgame Climb Percent By Team',
    scoringTypes: [
        {
            key: 'No',
            label: 'No Climb',
            color: '#8884d8',
            stacked: true, 
            name: 'No Climb', 
        },
        {
            key: 'P',
            label: 'Parked',
            color: '#82ca9d',
            stacked: true,
            name: 'Parked', 
        },
        {
            key: 'Fh',
            label: 'Failed Harmony',
            color: '#ff4444',
            stacked: true,
            name: 'Failed Harmony',
        },
        {
            key: 'Os',
            label: 'Onstage',
            color: '#ffc658',
            stacked: true,
            name: 'Onstage',
        },
        {
            key: 'Hm',
            label: 'Harmony',
            color: '#ff8042',
            stacked: true,
            name: 'Harmony', 
        },
    ],
    chartSettings: {
        showGridlines: true,
        gridlineColor: '#444444',
    },
    xKey: 'teamNumber',
    yKey: 'No',
    xAxisLabel: 'Team Number',
    yAxisLabel: 'Percentage',
    yAxisMin: 0,
    yAxisMax: 100,
    showTooltip: true,
    tooltipSettings: {
        backgroundColor: '#333333',
        borderRadius: '8px',
        fontSize: '0.875rem',
        cursorColor: 'rgba(255, 255, 255, 0.1)',
    },
    showLegend: true,
    interactiveLegend: true,
    legendPosition: 'top',
    responsive: true,
    maintainAspectRatio: true,
    showDataLabels: false,
    dataLabelPosition: 'inside',
    dataLabelRotation: 0,
    sortOrder: 'ascending',
});

export const competitionMultiNumberConfig = (scoutingData) => {
    return {
        mainTitle: `Competition Tele-Op Stats`, 
        values: [
            {
                color: '#73bf69',
                title: 'Average TeleOp Speaker / Max',
                min: 0,
                max: Math.round(speakerTeleOpMax(scoutingData) * 100) / 100,
                value: Math.round(speakerTeleOpAverage(scoutingData) * 100) / 100,
            },
            {
                color: '#ffab40',
                title: 'Average TeleOp Amp / Max',
                min: 0,
                max: Math.round(ampTeleOpMax(scoutingData) * 100) / 100,
                value: Math.round(ampTeleOpAverage(scoutingData) * 100) / 100,
            },
            {
                color: '#40c4ff',
                title: 'Average Speaker Accurecy / Max',
                min: 0,
                max: Math.round(speakerTeleOpAccuracyMax(scoutingData) * 100) / 100,
                value: Math.round(speakerTeleOpAccuracyAverage(scoutingData) * 100) / 100,
            },
            {
                color: '#c4162a',
                title: 'Average Amp Accurecy / Max',
                min: 0,
                max: Math.round(ampTeleOpAccuracyMax(scoutingData) * 100) / 100,
                value: Math.round(ampTeleOpAccuracyAverage(scoutingData) * 100) / 100,
            },
        ],
    };
};